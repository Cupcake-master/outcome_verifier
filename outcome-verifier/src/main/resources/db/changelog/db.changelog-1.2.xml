<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
    <changeSet id="1.2.0" author="bulat.bilalov">
        <createTable tableName="tasks">
            <column name="id" type="BIGINT" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>

            <column name="text" type="VARCHAR(1024)">
                <constraints nullable="false"/>
            </column>

            <column name="created" type="TIMESTAMP" defaultValue="now()">
                <constraints nullable="false"/>
            </column>

            <column name="updated" type="TIMESTAMP" defaultValue="now()">
                <constraints nullable="false"/>
            </column>

            <column name="state_id" type="BIGINT" defaultValue="1">
                <constraints nullable="false"/>
            </column>
        </createTable>

    </changeSet>

    <changeSet id="1.2.1" author="bulat.bilalov">
        <createTable tableName="tests">
            <column name="id" type="BIGINT" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>

            <column name="input" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>

            <column name="output" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>

            <column name="created" type="TIMESTAMP" defaultValue="now()">
                <constraints nullable="false"/>
            </column>

            <column name="updated" type="TIMESTAMP" defaultValue="now()">
                <constraints nullable="false"/>
            </column>

            <column name="state_id" type="BIGINT" defaultValue="1">
                <constraints nullable="false"/>
            </column>

            <column name="task_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
        </createTable>

    </changeSet>

    <changeSet id="1.2.2" author="bulat.bilalov">
        <insert tableName="tasks">
            <column name="text" value="В Григорианском календаре год является високосным в двух случаях: либо он кратен 4, но при этом не кратен 100, либо кратен 400. Реализуйте метод, вычисляющий количество високосных лет с начала нашей эры (первого года) до заданного года включительно."/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Необходимо реализовать функцию:
1) на вход функция получает целое число n;
2) необходимо вывести в консоль значение числа Фибоначчи под номером n;"/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Необходимо реализовать функцию:
1) на вход функция получает массив целых чисел;
2) нужно определить максимальную длину подмассива, у которого все элементы возрастают;
3) вычисленную длину вывести в консоль;"/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="У вас есть массив строк, и вы хотите найти в этом массиве строку, которая содержит заданное слово. Если такой строки нет, программа должна выбросить исключение и вывести сообщение об ошибке: No strings containing the word you are looking for were found. Если она существует, то вывести её. Массив: [apple, banana, cherry, date, elderberry]"/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Нужно написать класс, представляющий собой банковский счет. Класс должен иметь два поля: баланс и номер счета. Методы для внесения и снятия денег со счета. Однако, при снятии денег с банковского счета нельзя снять больше денег, чем есть на счете. Если происходит попытка снять больше денег, чем есть на счете, программа должна выбросить исключение и вывести сообщение об ошибке: Insufficient funds in the account., в противном случае: The transaction can be performed. Программа принимает на входе два параметра: счёт и сколько хочет снять пользователь"/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Реализовать класс, представляющий собой заказ на покупку товаров. Класс должен иметь поля для имени заказчика, суммы заказа и статуса заказа (выполнен или нет). Также методы для изменения статуса заказа (boolean) и проверки того, был ли заказ выполнен. Однако, если попытаться изменить статус заказа, когда заказ уже выполнен, должно выбрасываться специальное исключение: OrderAlreadyFulfilledException(The order is already completed and its status cannot be changed.), в противном случае: OK"/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Cортировки списка студентов по их среднему баллу. Класс Student должен содержать имя и средний балл."/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Задача подсчета количества различных слов в тексте"/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Дан массив целых чисел. Напишите программу на Java, которая принимает на вход массив и возвращает новый массив, содержащий удвоенные значения исходного массива. Для реализации программы используйте класс Map."/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Создайте класс Dog для представления собаки. Класс должен содержать поля для имени, возраста и породы собаки, а также методы для получения и установки значений этих полей. Также класс должен содержать метод, который возвращает строку с описанием собаки, содержащую ее имя, возраст и породу."/>
        </insert>

        <insert tableName="tasks">
            <column name="text" value="Создайте класс Animal для представления животного. Класс должен содержать поля для имени, возраста и веса животного, а также методы для получения и установки значений этих полей. Также класс должен содержать метод, который возвращает строку с описанием животного, содержащую его имя, возраст и вес.

Создайте класс Cat, который наследует класс Animal и добавляет новое поле - породу. Класс Cat должен содержать метод для получения и установки значения породы, а также переопределять метод getDescription класса Animal, чтобы он возвращал строку с описанием кота, содержащую его имя, возраст, вес и породу."/>
        </insert>
    </changeSet>

    <changeSet id="1.2.3" author="bulat.bilalov">
        <insert tableName="tests">
            <column name="input" value="1"/>
            <column name="output" value="0"/>
            <column name="task_id" value="1"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="4"/>
            <column name="output" value="1"/>
            <column name="task_id" value="1"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="100"/>
            <column name="output" value="24"/>
            <column name="task_id" value="1"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="1"/>
            <column name="output" value="1"/>
            <column name="task_id" value="2"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="6"/>
            <column name="output" value="8"/>
            <column name="task_id" value="2"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="11"/>
            <column name="output" value="89"/>
            <column name="task_id" value="2"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="2 1 4 1 2 3 4 5 6 7 3 1"/>
            <column name="output" value="7"/>
            <column name="task_id" value="3"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="1 2 3 4 5 6 7 8 9 11"/>
            <column name="output" value="10"/>
            <column name="task_id" value="3"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="2 1 4 5 6 4 1 2 3 4 5 6"/>
            <column name="output" value="6"/>
            <column name="task_id" value="3"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="apple"/>
            <column name="output" value="apple"/>
            <column name="task_id" value="4"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="orange"/>
            <column name="output" value="No strings containing the word you are looking for were found."/>
            <column name="task_id" value="4"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="date"/>
            <column name="output" value="date"/>
            <column name="task_id" value="4"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="2445 2444"/>
            <column name="output" value="The transaction can be performed."/>
            <column name="task_id" value="5"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="2000 2000"/>
            <column name="output" value="The transaction can be performed."/>
            <column name="task_id" value="5"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="111 112"/>
            <column name="output" value="Insufficient funds in the account."/>
            <column name="task_id" value="5"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="0 1"/>
            <column name="output" value="Insufficient funds in the account."/>
            <column name="task_id" value="5"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Bulat 5000 false"/>
            <column name="output" value="OK"/>
            <column name="task_id" value="6"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Timur 4000 true"/>
            <column name="output" value="The order is already completed and its status cannot be changed."/>
            <column name="task_id" value="6"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Bob 3000 true"/>
            <column name="output" value="The order is already completed and its status cannot be changed."/>
            <column name="task_id" value="6"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Qwerty 2000 false"/>
            <column name="output" value="OK"/>
            <column name="task_id" value="6"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Alice 3.5 Bob 4.0 Charlie 3.8 David 3.2"/>
            <column name="output" value="Bob 4.0 Charlie 3.8 Alice 3.5 David 3.2 "/>
            <column name="task_id" value="7"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Bob 5.0 Alice 4.0"/>
            <column name="output" value="Bob 5.0 Alice 4.0 "/>
            <column name="task_id" value="7"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Alice 3.5 Bob 4.0 David 3.2 Bulat 3.0"/>
            <column name="output" value="Bob 4.0 Alice 3.5 David 3.2 Bulat 3.0 "/>
            <column name="task_id" value="7"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Bob 3.5"/>
            <column name="output" value="Bob 3.5 "/>
            <column name="task_id" value="7"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="This is some sample text with repeated words. This text is used to demonstrate the word counter program."/>
            <column name="output" value="15"/>
            <column name="task_id" value="8"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="This text is used to demonstrate the word counter program. It is ok"/>
            <column name="output" value="12"/>
            <column name="task_id" value="8"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="1 2 3 4 5"/>
            <column name="output" value="[2, 4, 6, 8, 10]"/>
            <column name="task_id" value="9"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="0 -2 5 7 -9 10"/>
            <column name="output" value="[0, -4, 10, 14, -18, 20]"/>
            <column name="task_id" value="9"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="100 200 300 400 500 600 700 800 900 1000"/>
            <column name="output" value="[200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000]"/>
            <column name="task_id" value="9"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="-3 -6 -9 -12 -15"/>
            <column name="output" value="[-6, -12, -18, -24, -30]"/>
            <column name="task_id" value="9"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Rex 2 Yorkshire_Terrier"/>
            <column name="output" value="Name of the dog: Rex, age: 2 года, breed: Yorkshire_Terrier"/>
            <column name="task_id" value="10"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Bobik 5 Labrador"/>
            <column name="output" value="Name of the dog: Bobik, age: 5 лет, breed: Labrador"/>
            <column name="task_id" value="10"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Max 1 German_Shepherd"/>
            <column name="output" value="Name of the dog: Max, age: 1 год, breed: German_Shepherd"/>
            <column name="task_id" value="10"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="Ball 3 Poodles"/>
            <column name="output" value="Name of the dog: Ball, age: 3 года, breed: Poodles"/>
            <column name="task_id" value="10"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="animal Carrot_Top 3 4.5"/>
            <column name="output" value="An animal named Carrot_Top, age 3 года, weight 4.5 kg"/>
            <column name="task_id" value="11"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="cat Barsik 2 3.2 Scottish_lop blue"/>
            <column name="output" value="A cat named Barsik, age 2, weight 3.2 kg, breed Scottish_lop, color blue"/>
            <column name="task_id" value="11"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="cat Murzyk 5 5.1 Persian yellow"/>
            <column name="output" value="A cat named Murzyk, age 5, weight 5.1 kg, breed Persian, color yellow"/>
            <column name="task_id" value="11"/>
        </insert>

        <insert tableName="tests">
            <column name="input" value="cat Vaska 1 2.7 British red"/>
            <column name="output" value="A cat named Vaska, age 1, weight 2.7 kg, breed British, color red"/>
            <column name="task_id" value="11"/>
        </insert>
    </changeSet>
</databaseChangeLog>